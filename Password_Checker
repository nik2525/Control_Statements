import re  # Import the regular expression module

def password_checker():
    print("Welcome to Password Checker!")  # Print a welcome message
    while True:  # Start an infinite loop
        difficulty = input("Choose difficulty level (Easy/Medium/Hard), or type 'exit' to quit: ").lower()  # Ask the user to choose a difficulty level

        if difficulty == "exit":  # Check if the user wants to exit
            print("Exiting the password checker. Goodbye!")  # Print a goodbye message
            break  # Exit the loop

        if difficulty not in ["easy", "medium", "hard"]:  # Check if the chosen difficulty level is valid
            print("Invalid difficulty level. Please choose from Easy, Medium, or Hard.")  # Print an error message
            continue  # Continue to the next iteration of the loop

        password = input("Enter your password: ")  # Ask the user to enter a password

        if difficulty == "easy":  # Check if the chosen difficulty level is Easy
            if len(password) >= 6:  # Check if the password meets the minimum length requirement
                print("Success! Password meets the minimum length requirement.")  # Print a success message
            else:
                print("Password must be at least 6 characters long.")  # Print an error message

        elif difficulty == "medium":  # Check if the chosen difficulty level is Medium
            if len(password) >= 8 and re.search(r'[A-Z]', password) and re.search(r'[a-z]', password) and re.search(r'\d', password):
                # Check if the password meets the complexity requirements (at least 8 characters, one uppercase letter, one lowercase letter, one digit)
                print("Success! Password meets the complexity requirements.")  # Print a success message
            else:
                print("Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, and one digit.")  # Print an error message

        elif difficulty == "hard":  # Check if the chosen difficulty level is Hard
            if len(password) >= 8 and re.search(r'[A-Z]', password) and re.search(r'[a-z]', password) and re.search(r'\d', password) and re.search(r'[^a-zA-Z\d]', password):
                # Check if the password meets the complexity requirements (at least 8 characters, one uppercase letter, one lowercase letter, one digit, and one special character)
                print("Success! Password meets the complexity requirements.")  # Print a success message
            else:
                print("Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one digit, and one special character.")  # Print an error message

        play_again = input("Do you want to try again? (yes/no): ").lower()  # Ask the user if they want to try again
        if play_again != 'yes':  # Check if the user does not want to try again
            print("Exiting the password checker. Goodbye!")  # Print a goodbye message
            break  # Exit the loop

password_checker()  # Call the password_checker function to start the program
